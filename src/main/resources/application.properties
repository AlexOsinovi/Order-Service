spring.application.name=Order-Service
server.port=8082

spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.yaml
spring.jpa.hibernate.ddl-auto=none

spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.config.import=optional:file:.env[.properties]
user.service.url=${ORDER_USER_SERVICE_URL}

spring.kafka.bootstrap-servers=localhost:9092

spring.kafka.topics.orders=orders-topic
spring.kafka.topics.payments=payments-topic
spring.kafka.consumer.group-id=order-group


spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.producer.properties.enable.idempotence=true

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.isolation-level=read_committed

spring.kafka.consumer.properties.spring.json.trusted.packages=by.osinovi.*
spring.kafka.consumer.properties.spring.json.value.default.type=by.osinovi.orderservice.dto.message.PaymentMessage

logging.level.by.osinovi.paymentservice=DEBUG